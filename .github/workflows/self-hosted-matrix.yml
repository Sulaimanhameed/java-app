name: Matrix Build and Docker Push

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  DOCKER_IMAGE_NAME: catninjauser/java-app

jobs:
  matrix-build:
    name: Build Java ${{ matrix.java-version }} on ${{ matrix.os }}
    
    strategy:
      matrix:
        java-version: [17, 21, 24]
        os: [ubuntu-22.04, ubuntu-24.04]
      fail-fast: false
    
    runs-on: [self-hosted, '${{ matrix.os }}']
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: '${{ matrix.java-version }}'
          distribution: 'temurin'
          cache: maven
      
      - name: Test and Build
        run: |
          chmod +x mvnw
          ./mvnw clean test package -B
      
      - name: Upload JAR (Java 17 only)
        if: matrix.java-version == '17' && matrix.os == 'ubuntu-24.04'
        uses: actions/upload-artifact@v4
        with:
          name: application-jar
          path: target/*.jar

  docker-build-push:
    name: Docker Build and Push
    needs: matrix-build
    runs-on: [self-hosted, ubuntu-24.04]
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Download JAR
        uses: actions/download-artifact@v4
        with:
          name: application-jar
          path: target/
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE_NAME }}:latest
            ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max