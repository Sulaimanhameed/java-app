name: Self-Hosted Matrix Build with Docker

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  DOCKER_IMAGE_NAME: sulaimanhameed/java-app
  DOCKER_REGISTRY: docker.io

jobs:
  matrix-test:
    name: Test Java ${{ matrix.java-version }} on ${{ matrix.os }}
    
    strategy:
      matrix:
        java-version: [17, 21]
        os: [ubuntu-22.04, ubuntu-24.04]
      fail-fast: false
      max-parallel: 4
    
    runs-on: [self-hosted, '${{ matrix.os }}']
    timeout-minutes: 30
    
    outputs:
      build-success: ${{ steps.build-check.outputs.success }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          clean: true
      
      - name: Display Runner Info
        run: |
          echo "Runner: $(hostname)"
          echo "OS: $(lsb_release -d 2>/dev/null || echo 'Linux')"
          echo "Workspace: ${{ github.workspace }}"
          echo "Matrix: Java ${{ matrix.java-version }} on ${{ matrix.os }}"
      
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: '${{ matrix.java-version }}'
          distribution: 'temurin'
          cache: maven
      
      - name: Verify Java and Maven
        run: |
          echo "Java version:"
          java -version
          echo ""
          echo "Maven version:"
          mvn -version
          echo ""
          echo "JAVA_HOME: $JAVA_HOME"
      
      - name: Add Maven Wrapper if Missing
        run: |
          if [ ! -f "mvnw" ]; then
            echo "Maven wrapper not found, generating it..."
            mvn wrapper:wrapper
            chmod +x mvnw
          else
            echo "Maven wrapper already exists"
            chmod +x mvnw
          fi
      
      - name: Clean Previous Builds
        run: |
          echo "Cleaning previous builds..."
          rm -rf target/ || true
      
      - name: Run Tests
        run: |
          echo "Running tests..."
          ./mvnw clean test -B
      
      - name: Build Application
        run: |
          echo "Building application..."
          ./mvnw clean package -DskipTests -B
      
      - name: Verify Build Output
        id: build-check
        run: |
          echo "Build verification:"
          ls -la target/
          if ls target/*.jar 1> /dev/null 2>&1; then
            echo "JAR file created successfully:"
            ls -lh target/*.jar
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "No JAR file found"
            echo "success=false" >> $GITHUB_OUTPUT
            exit 1
          fi
      
      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: jar-java${{ matrix.java-version }}-${{ matrix.os }}
          path: target/*.jar
          retention-days: 7

  docker-build-push:
    name: Build and Push Docker Image
    needs: matrix-test
    runs-on: [self-hosted]
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          clean: true
      
      - name: Set up JDK 17 (for Docker build)
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Add Maven Wrapper if Missing
        run: |
          if [ ! -f "mvnw" ]; then
            echo "Maven wrapper not found, generating it..."
            mvn wrapper:wrapper
            chmod +x mvnw
          else
            echo "Maven wrapper already exists"
            chmod +x mvnw
          fi
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Verify Docker image
        run: |
          echo "Docker image pushed successfully!"
          echo "Image tags:"
          echo "${{ steps.meta.outputs.tags }}"
          
          # Test pull the image
          docker pull ${{ env.DOCKER_IMAGE_NAME }}:latest
          echo "Docker image verified and ready!"

  build-summary:
    name: Matrix Build Summary  
    needs: [matrix-test, docker-build-push]
    runs-on: [self-hosted]
    if: always()
    
    steps:
      - name: Display Results
        run: |
          echo "Matrix Build Complete!"
          echo "Tested combinations:"
          echo "  • Java 17 + Ubuntu 22.04"
          echo "  • Java 17 + Ubuntu 24.04" 
          echo "  • Java 21 + Ubuntu 22.04"
          echo "  • Java 21 + Ubuntu 24.04"
          echo ""
          if [ "${{ needs.docker-build-push.result }}" == "success" ]; then
            echo "Docker image built and pushed successfully!"
            echo "You can pull it with: docker pull ${{ env.DOCKER_IMAGE_NAME }}:latest"
          else
            echo "Docker build was skipped or failed"
          fi
          echo ""
          echo "Check individual job logs for detailed results"